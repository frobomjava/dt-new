
<!DOCTYPE html>
<html>

<head>
  <title>Welcome</title>
  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link href="css/style.css" rel='stylesheet' type='text/css' />
</head>

<body>
  <nav class="navbar navbar-default">
    <div class="container-fluid">

      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#">Brand</a>
      </div>


      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
        <ul class="nav navbar-nav">
          <li class="active"><a href="#">Link <span class="sr-only">(current)</span></a></li>
          <li><a href="#">Link</a></li>
          <li class="dropdown">
            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Dropdown <span class="caret"></span></a>
            <ul class="dropdown-menu" role="menu">
              <li><a href="#">Action</a></li>
              <li><a href="#">Another action</a></li>
              <li><a href="#">Something else here</a></li>
              <li class="divider"></li>
              <li><a href="#">Separated link</a></li>
              <li class="divider"></li>
              <li><a href="#">One more separated link</a></li>
            </ul>
          </li>
        </ul>
        <div class="navbar-form navbar-right">
          <strong><%=req.user.userName %>&nbsp;<a href="/logout">Log out</a></strong>
        </div>

      </div>
    </div>
  </nav>

  <div id='projects' class="list-group"></div>

  <form action="#" id="project-create">
    <input type="text" id="projectName" name="projectName" required/>
    <input type="submit" value="create"/>
  </form>
  <h4 id="error"></h4>
  <script src="/dependencies/sails.io.js"></script>

  <script src="/dependencies/code.jquery.com-jquery-latest.min.js"></script>
  <script src="/dependencies/code.jquery.com-ui-1.12.0-jquery-ui.js"></script>
  <script src="/dependencies/pubsub.js"></script>
  <script src="/dependencies/react.min.js"></script>
  <script src="/dependencies/react-dom.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.min.js"></script>

  <script type="text/babel">
  var ProjectList = React.createClass({
    getInitialState: function() {
      return ({
        projects: []
      }
    );
  },

  componentWillMount: function() {
    var self = this;
    $.getJSON('/projects', function (data) {
      console.log('ok, got data');
      //console.log("data is = " + JSON.stringify(data));
      self.setState({
        projects: data
      });

    });

    $('#project-create').submit(function(event) {
      console.log("post handler");
      event.preventDefault();
      var url = '/project/new';
      var posting = $.post(url, {projectName: $('#projectName').val()});
      posting.done(function(data) {
        if (data.projectName) {
          $('#projectName').val('');
          $('#error').text('');
          console.log(data.projectName);
          var projectsUpdated = self.state.projects.slice();
          projectsUpdated.push(data);
          self.setState({
            projects: projectsUpdated
          }
        );
      }
      else {
        console.log(data.error);
        $('#error').text(data.error);
      }
    });
  });
},

deleteHandler: function(event){
  console.log("delete handler");
  event.preventDefault();
  var self = this;
  var projectName = event.target.getAttribute('name');
  var index = event.target.getAttribute('id');
  var url = '/project/delete/'+projectName;
  var getting = $.get(url);
  getting.done(function() {
    var projectsUpdated = self.state.projects.slice();
    projectsUpdated.splice(index, 1);
    self.setState({projects: projectsUpdated});
  });
},

render: function() {
  var self = this;
  var index = 0;

  return (<ul>
    {this.state.projects.map(function(project){
      var url = '/project/in/'+ project.projectName;
      return (
        <li><a href={url} className="list-group-item">{project.projectName}</a> &nbsp;
        (<a href="#" id={index++} name={project.projectName} onClick={self.deleteHandler}>Delete</a>)
        </li>
      );
    })}
    </ul>
  );
}
});
ReactDOM.render(<ProjectList/>, document.getElementById('projects'));
</script>
</body>
</html>
