
<!DOCTYPE html>
<html>

<head>
  <title>Welcome></title>
</head>
<h4>Welcome <%=req.user.userName %></h4>

<body>

  <div id='projects'></div>

  <form action="#" id="project-create">
    <input type="text" id="projectName" name="projectName"/>
    <input type="submit" value="create"/>
  </form>

  <script src="/dependencies/sails.io.js"></script>

  <script src="/dependencies/code.jquery.com-jquery-latest.min.js"></script>
  <script src="/dependencies/code.jquery.com-ui-1.12.0-jquery-ui.js"></script>
  <script src="/dependencies/pubsub.js"></script>
  <script src="/dependencies/react.min.js"></script>
  <script src="/dependencies/react-dom.min.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.24/browser.min.js"></script>

  <script type="text/babel">
  var ProjectList = React.createClass({
    getInitialState: function() {
      return ({
        projects: []
      }
    );
  },

  componentWillMount: function() {
    var self = this;
    $.getJSON('/projects', function (data) {
      console.log('ok, got data');
      console.log("data is = " + JSON.stringify(data));
      self.setState({
        projects: data
      });

    });

    $('#project-create').submit(function(event) {
      console.log("post handler");
      event.preventDefault();
      var url = '/project/new';
      var posting = $.post(url, {projectName: $('#projectName').val()});
      posting.done(function(data) {
        console.log(data.name);
        var projectsUpdated = self.state.projects.slice();
        projectsUpdated.push(data);
        self.setState({
          projects: projectsUpdated
        }
      );
    });
  });
},

render: function() {
  return (<ul>
    {this.state.projects.map(function(project){
      return <li>{project.projectName}</li>;
    })}
    </ul>);
  }

});
ReactDOM.render(<ProjectList/>, document.getElementById('projects'));
</script>
</body>
</html>
